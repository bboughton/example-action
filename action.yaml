name: 'Release'
description: 'Create releases when Pull Requests are merged.'

inputs:
  token:
    description: Personal access token (PAT) used to access the repository.
    default: ${{ github.token }}
  pr_number:
    description: Pull Request associated with run.
    default: ${{ github.event.number }}

outputs:
  tag:
    description: 'Release tag'

runs:
  using: 'composite'
  steps:
    - run: |
        # Check if the .git directory exists (indicating the repo has been checked out)
        if [ ! -d ".git" ]; then
          echo "::error::Repository has not been checked out. Please ensure 'actions/checkout' is included in the workflow."
          exit 1
        fi
      shell: bash
    - run: |
        # Check if tags have been retrieved
        if [ -z "$(git tag)" ]; then
          echo "::warning::No tags found. Please ensure 'actions/checkout' is run with fetch-depth set to 0 to retrieve all tags."
        fi
      shell: bash
    - run: ${{ github.action_path }}/check_version_category_label.sh
      env:
        PR_NUMBER: ${{ inputs.pr_number }}
        GH_TOKEN: ${{ inputs.token }}
      shell: bash
      id: version-category
    - name: release
      shell: bash
      id: release
      if: steps.version-category.outputs.category != 'none'
      env:
        VERSION_CATEGORY: ${{ steps.version-category.outputs.category }}
        GH_TOKEN: ${{ inputs.token }}
        PR_NUMBER: ${{ inputs.pr_number }}
      run: ${{ github.action_path }}/release.sh "$VERSION_CATEGORY"
